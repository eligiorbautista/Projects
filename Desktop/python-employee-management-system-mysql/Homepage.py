# Form implementation generated from reading ui file 'mainwindow.ui'
#
# Created by: PyQt6 UI code generator 6.3.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(792, 471)
        MainWindow.setMinimumSize(QtCore.QSize(0, 0))
        MainWindow.setMaximumSize(QtCore.QSize(833, 520))
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("images/profile.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        MainWindow.setWindowIcon(icon)
        MainWindow.setStyleSheet("background-color:white\n"
"")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.frame_3 = QtWidgets.QFrame(self.centralwidget)
        self.frame_3.setGeometry(QtCore.QRect(0, 0, 793, 471))
        self.frame_3.setStyleSheet("background-color:rgb(30, 30, 30)\n"
"")
        self.frame_3.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.frame_3.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.frame_3.setObjectName("frame_3")
        self.stackedWidget = QtWidgets.QStackedWidget(self.frame_3)
        self.stackedWidget.setGeometry(QtCore.QRect(12, 119, 771, 341))
        self.stackedWidget.setStyleSheet("background-color:white")
        self.stackedWidget.setObjectName("stackedWidget")
        self.home = QtWidgets.QWidget()
        self.home.setObjectName("home")
        self.frame_4 = QtWidgets.QFrame(self.home)
        self.frame_4.setGeometry(QtCore.QRect(0, 0, 771, 341))
        font = QtGui.QFont()
        font.setFamily("Yu Gothic UI Semibold")
        self.frame_4.setFont(font)
        self.frame_4.setStyleSheet("background-color:rgb(108, 108, 81)")
        self.frame_4.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.frame_4.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.frame_4.setObjectName("frame_4")
        self.label = QtWidgets.QLabel(self.frame_4)
        self.label.setGeometry(QtCore.QRect(1, 1, 752, 71))
        font = QtGui.QFont()
        font.setFamily("Impact")
        font.setPointSize(34)
        font.setBold(True)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setCursor(QtGui.QCursor(QtCore.Qt.CursorShape.ArrowCursor))
        self.label.setStyleSheet("color:white\n"
"")
        self.label.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(self.frame_4)
        self.label_2.setGeometry(QtCore.QRect(0, 70, 769, 35))
        font = QtGui.QFont()
        font.setFamily("Impact")
        font.setPointSize(19)
        font.setBold(True)
        font.setWeight(75)
        self.label_2.setFont(font)
        self.label_2.setStyleSheet("color:white")
        self.label_2.setObjectName("label_2")
        self.stackedWidget.addWidget(self.home)
        self.page_2 = QtWidgets.QWidget()
        self.page_2.setObjectName("page_2")
        self.frame_5 = QtWidgets.QFrame(self.page_2)
        self.frame_5.setGeometry(QtCore.QRect(0, 0, 771, 341))
        font = QtGui.QFont()
        font.setFamily("Yu Gothic UI Semibold")
        self.frame_5.setFont(font)
        self.frame_5.setStyleSheet("background-color:rgb(108, 108, 81)")
        self.frame_5.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.frame_5.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.frame_5.setObjectName("frame_5")
        self.groupBox = QtWidgets.QGroupBox(self.frame_5)
        self.groupBox.setGeometry(QtCore.QRect(10, 12, 748, 311))
        font = QtGui.QFont()
        font.setFamily("Impact")
        self.groupBox.setFont(font)
        self.groupBox.setStyleSheet("color:white")
        self.groupBox.setObjectName("groupBox")
        self.empusername = QtWidgets.QLineEdit(self.groupBox)
        self.empusername.setGeometry(QtCore.QRect(30, 60, 181, 31))
        font = QtGui.QFont()
        font.setPointSize(8)
        self.empusername.setFont(font)
        self.empusername.setStyleSheet("background-color:white;color:black;border:2px solid black")
        self.empusername.setObjectName("empusername")
        self.emppassword = QtWidgets.QLineEdit(self.groupBox)
        self.emppassword.setGeometry(QtCore.QRect(30, 100, 181, 31))
        font = QtGui.QFont()
        font.setPointSize(8)
        self.emppassword.setFont(font)
        self.emppassword.setStyleSheet("background-color:white;color:black;border:2px solid black")
        self.emppassword.setPlaceholderText(" Employee Password")
        self.emppassword.setObjectName("emppassword")
        self.empconfirmpassword = QtWidgets.QLineEdit(self.groupBox)
        self.empconfirmpassword.setGeometry(QtCore.QRect(30, 140, 181, 31))
        font = QtGui.QFont()
        font.setPointSize(8)
        self.empconfirmpassword.setFont(font)
        self.empconfirmpassword.setStyleSheet("background-color:white;color:black;border:2px solid black")
        self.empconfirmpassword.setObjectName("empconfirmpassword")
        self.empname = QtWidgets.QLineEdit(self.groupBox)
        self.empname.setGeometry(QtCore.QRect(280, 60, 181, 31))
        font = QtGui.QFont()
        font.setPointSize(8)
        self.empname.setFont(font)
        self.empname.setStyleSheet("background-color:white;color:black;border:2px solid black")
        self.empname.setObjectName("empname")
        self.empemail = QtWidgets.QLineEdit(self.groupBox)
        self.empemail.setGeometry(QtCore.QRect(280, 140, 181, 31))
        font = QtGui.QFont()
        font.setPointSize(8)
        self.empemail.setFont(font)
        self.empemail.setStyleSheet("background-color:white;color:black;border:2px solid black")
        self.empemail.setObjectName("empemail")
        self.empcontact = QtWidgets.QLineEdit(self.groupBox)
        self.empcontact.setGeometry(QtCore.QRect(280, 100, 181, 31))
        font = QtGui.QFont()
        font.setPointSize(8)
        self.empcontact.setFont(font)
        self.empcontact.setStyleSheet("background-color:white;color:black;border:2px solid black")
        self.empcontact.setPlaceholderText(" Employee Contact No.")
        self.empcontact.setObjectName("empcontact")
        self.empage = QtWidgets.QLineEdit(self.groupBox)
        self.empage.setGeometry(QtCore.QRect(530, 100, 181, 31))
        font = QtGui.QFont()
        font.setPointSize(8)
        self.empage.setFont(font)
        self.empage.setStyleSheet("background-color:white;color:black;border:2px solid black")
        self.empage.setPlaceholderText(" Employee Age")
        self.empage.setObjectName("empage")
        self.empgender = QtWidgets.QComboBox(self.groupBox)
        self.empgender.setGeometry(QtCore.QRect(530, 60, 181, 31))
        self.empgender.setStyleSheet("background-color:white;color:black;border:2px solid black")
        self.empgender.setObjectName("empgender")
        self.empgender.addItem("")
        self.empgender.addItem("")
        self.empgender.addItem("")
        self.empdateofbirth = QtWidgets.QDateEdit(self.groupBox)
        self.empdateofbirth.setGeometry(QtCore.QRect(530, 150, 181, 20))
        self.empdateofbirth.setStyleSheet("background-color:white;color:black;border:2px solid black")
        self.empdateofbirth.setObjectName("empdateofbirth")
        self.label_3 = QtWidgets.QLabel(self.groupBox)
        self.label_3.setGeometry(QtCore.QRect(531, 136, 181, 11))
        font = QtGui.QFont()
        font.setFamily("Impact")
        self.label_3.setFont(font)
        self.label_3.setObjectName("label_3")
        self.empaddress = QtWidgets.QTextEdit(self.groupBox)
        self.empaddress.setGeometry(QtCore.QRect(30, 180, 681, 71))
        self.empaddress.setStyleSheet("background-color:white;color:black;border:2px solid black")
        self.empaddress.setObjectName("empaddress")
        self.btnregister = QtWidgets.QPushButton(self.groupBox)
        self.btnregister.setGeometry(QtCore.QRect(601, 270, 111, 28))
        font = QtGui.QFont()
        font.setFamily("Impact")
        font.setBold(False)
        font.setWeight(50)
        self.btnregister.setFont(font)
        self.btnregister.setStyleSheet("background-color:rgb(255, 0, 0);color:white")
        self.btnregister.setObjectName("btnregister")
        self.btncancelregister = QtWidgets.QPushButton(self.groupBox)
        self.btncancelregister.setGeometry(QtCore.QRect(480, 270, 111, 28))
        font = QtGui.QFont()
        font.setFamily("Impact")
        font.setBold(False)
        font.setWeight(50)
        self.btncancelregister.setFont(font)
        self.btncancelregister.setStyleSheet("background-color:rgb(255, 0, 0);color:white")
        self.btncancelregister.setObjectName("btncancelregister")
        self.stackedWidget.addWidget(self.page_2)
        self.page = QtWidgets.QWidget()
        self.page.setObjectName("page")
        self.frame_6 = QtWidgets.QFrame(self.page)
        self.frame_6.setGeometry(QtCore.QRect(0, 0, 771, 341))
        font = QtGui.QFont()
        font.setFamily("Yu Gothic UI Semibold")
        self.frame_6.setFont(font)
        self.frame_6.setStyleSheet("background-color:rgb(108, 108, 81)")
        self.frame_6.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.frame_6.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.frame_6.setObjectName("frame_6")
        self.groupBox_2 = QtWidgets.QGroupBox(self.frame_6)
        self.groupBox_2.setGeometry(QtCore.QRect(10, 10, 748, 321))
        font = QtGui.QFont()
        font.setFamily("Impact")
        self.groupBox_2.setFont(font)
        self.groupBox_2.setStyleSheet("color:white")
        self.groupBox_2.setObjectName("groupBox_2")
        self.viewTableWidget = QtWidgets.QTableWidget(self.groupBox_2)
        self.viewTableWidget.setGeometry(QtCore.QRect(20, 30, 711, 251))
        self.viewTableWidget.setStyleSheet("background-color:white;color:black;border:2px solid black")
        self.viewTableWidget.setObjectName("viewTableWidget")
        self.viewTableWidget.setColumnCount(0)
        self.viewTableWidget.setRowCount(0)
        self.btnviewall = QtWidgets.QPushButton(self.groupBox_2)
        self.btnviewall.setGeometry(QtCore.QRect(15, 290, 61, 21))
        font = QtGui.QFont()
        font.setFamily("Impact")
        font.setBold(False)
        font.setWeight(50)
        self.btnviewall.setFont(font)
        self.btnviewall.setStyleSheet("background-color:rgb(255, 0, 0);color:white")
        self.btnviewall.setObjectName("btnviewall")
        self.searchemployeeinput = QtWidgets.QLineEdit(self.groupBox_2)
        self.searchemployeeinput.setGeometry(QtCore.QRect(545, 290, 121, 21))
        font = QtGui.QFont()
        font.setPointSize(8)
        self.searchemployeeinput.setFont(font)
        self.searchemployeeinput.setStyleSheet("background-color:white;color:black;border:2px solid black")
        self.searchemployeeinput.setObjectName("searchemployeeinput")
        self.btnsearchemp = QtWidgets.QPushButton(self.groupBox_2)
        self.btnsearchemp.setGeometry(QtCore.QRect(670, 290, 61, 21))
        font = QtGui.QFont()
        font.setFamily("Impact")
        font.setBold(False)
        font.setWeight(50)
        self.btnsearchemp.setFont(font)
        self.btnsearchemp.setStyleSheet("background-color:rgb(255, 0, 0);color:white")
        self.btnsearchemp.setObjectName("btnsearchemp")
        self.stackedWidget.addWidget(self.page)
        self.page_3 = QtWidgets.QWidget()
        self.page_3.setObjectName("page_3")
        self.frame_7 = QtWidgets.QFrame(self.page_3)
        self.frame_7.setGeometry(QtCore.QRect(0, 0, 771, 341))
        font = QtGui.QFont()
        font.setFamily("Yu Gothic UI Semibold")
        self.frame_7.setFont(font)
        self.frame_7.setStyleSheet("background-color:rgb(108, 108, 81)")
        self.frame_7.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.frame_7.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.frame_7.setObjectName("frame_7")
        self.groupBox_3 = QtWidgets.QGroupBox(self.frame_7)
        self.groupBox_3.setGeometry(QtCore.QRect(10, 13, 748, 311))
        font = QtGui.QFont()
        font.setFamily("Impact")
        self.groupBox_3.setFont(font)
        self.groupBox_3.setStyleSheet("color:white")
        self.groupBox_3.setObjectName("groupBox_3")
        self.updateempusername = QtWidgets.QLineEdit(self.groupBox_3)
        self.updateempusername.setGeometry(QtCore.QRect(30, 60, 181, 31))
        font = QtGui.QFont()
        font.setPointSize(8)
        self.updateempusername.setFont(font)
        self.updateempusername.setStyleSheet("background-color:white;color:black;border:2px solid black")
        self.updateempusername.setObjectName("updateempusername")
        self.updateemppassword = QtWidgets.QLineEdit(self.groupBox_3)
        self.updateemppassword.setGeometry(QtCore.QRect(30, 100, 181, 31))
        font = QtGui.QFont()
        font.setPointSize(8)
        self.updateemppassword.setFont(font)
        self.updateemppassword.setStyleSheet("background-color:white;color:black;border:2px solid black")
        self.updateemppassword.setPlaceholderText(" Employee Password")
        self.updateemppassword.setObjectName("updateemppassword")
        self.updateempconfirmpassword = QtWidgets.QLineEdit(self.groupBox_3)
        self.updateempconfirmpassword.setGeometry(QtCore.QRect(30, 140, 181, 31))
        font = QtGui.QFont()
        font.setPointSize(8)
        self.updateempconfirmpassword.setFont(font)
        self.updateempconfirmpassword.setStyleSheet("background-color:white;color:black;border:2px solid black")
        self.updateempconfirmpassword.setObjectName("updateempconfirmpassword")
        self.updateempname = QtWidgets.QLineEdit(self.groupBox_3)
        self.updateempname.setGeometry(QtCore.QRect(280, 60, 181, 31))
        font = QtGui.QFont()
        font.setPointSize(8)
        self.updateempname.setFont(font)
        self.updateempname.setStyleSheet("background-color:white;color:black;border:2px solid black")
        self.updateempname.setObjectName("updateempname")
        self.updateempemail = QtWidgets.QLineEdit(self.groupBox_3)
        self.updateempemail.setGeometry(QtCore.QRect(280, 140, 181, 31))
        font = QtGui.QFont()
        font.setPointSize(8)
        self.updateempemail.setFont(font)
        self.updateempemail.setStyleSheet("background-color:white;color:black;border:2px solid black")
        self.updateempemail.setObjectName("updateempemail")
        self.updateempcontact = QtWidgets.QLineEdit(self.groupBox_3)
        self.updateempcontact.setGeometry(QtCore.QRect(280, 100, 181, 31))
        font = QtGui.QFont()
        font.setPointSize(8)
        self.updateempcontact.setFont(font)
        self.updateempcontact.setStyleSheet("background-color:white;color:black;border:2px solid black")
        self.updateempcontact.setPlaceholderText(" Employee Contact No.")
        self.updateempcontact.setObjectName("updateempcontact")
        self.updateempage = QtWidgets.QLineEdit(self.groupBox_3)
        self.updateempage.setGeometry(QtCore.QRect(530, 100, 181, 31))
        font = QtGui.QFont()
        font.setPointSize(8)
        self.updateempage.setFont(font)
        self.updateempage.setStyleSheet("background-color:white;color:black;border:2px solid black")
        self.updateempage.setPlaceholderText(" Employee Age")
        self.updateempage.setObjectName("updateempage")
        self.updateempgender = QtWidgets.QComboBox(self.groupBox_3)
        self.updateempgender.setGeometry(QtCore.QRect(530, 60, 181, 31))
        self.updateempgender.setStyleSheet("background-color:white;color:black;border:2px solid black")
        self.updateempgender.setObjectName("updateempgender")
        self.updateempgender.addItem("")
        self.updateempgender.addItem("")
        self.updateempgender.addItem("")
        self.updateempdateofbirth = QtWidgets.QLineEdit(self.groupBox_3)
        self.updateempdateofbirth.setGeometry(QtCore.QRect(530, 140, 181, 31))
        self.updateempdateofbirth.setStyleSheet("background-color:white;color:black;border:2px solid black")
        self.updateempdateofbirth.setObjectName("updateempdateofbirth")
        self.updateempdateofbirth.setPlaceholderText('Employee Date of Birth')

        self.updateempaddress = QtWidgets.QTextEdit(self.groupBox_3)
        self.updateempaddress.setGeometry(QtCore.QRect(30, 180, 681, 71))
        self.updateempaddress.setStyleSheet("background-color:white;color:black;border:2px solid black")
        self.updateempaddress.setObjectName("updateempaddress")
        self.btnupdatesaveupdate = QtWidgets.QPushButton(self.groupBox_3)
        self.btnupdatesaveupdate.setGeometry(QtCore.QRect(601, 270, 111, 28))
        font = QtGui.QFont()
        font.setFamily("Impact")
        font.setBold(False)
        font.setWeight(50)
        self.btnupdatesaveupdate.setFont(font)
        self.btnupdatesaveupdate.setStyleSheet("background-color:rgb(255, 0, 0);color:white")
        self.btnupdatesaveupdate.setObjectName("btnupdatesaveupdate")
        self.btnupdatecancelupdate = QtWidgets.QPushButton(self.groupBox_3)
        self.btnupdatecancelupdate.setGeometry(QtCore.QRect(480, 270, 111, 28))
        font = QtGui.QFont()
        font.setFamily("Impact")
        font.setBold(False)
        font.setWeight(50)
        self.btnupdatecancelupdate.setFont(font)
        self.btnupdatecancelupdate.setStyleSheet("background-color:rgb(255, 0, 0);color:white")
        self.btnupdatecancelupdate.setObjectName("btnupdatecancelupdate")
        self.stackedWidget.addWidget(self.page_3)
        self.btnsearchempupdate_2 = QtWidgets.QPushButton(self.groupBox_3)
        self.btnsearchempupdate_2.setGeometry(QtCore.QRect(180, 280, 61, 21))
        font = QtGui.QFont()
        font.setFamily("Impact")
        font.setBold(False)
        font.setWeight(50)
        self.btnsearchempupdate_2.setFont(font)
        self.btnsearchempupdate_2.setStyleSheet("background-color:rgb(255, 0, 0);color:white")
        self.btnsearchempupdate_2.setObjectName("btnsearchempupdate_2")
        self.updatesearchemployeeinput_2 = QtWidgets.QLineEdit(self.groupBox_3)
        self.updatesearchemployeeinput_2.setGeometry(QtCore.QRect(35, 280, 141, 21))
        font = QtGui.QFont()
        font.setPointSize(8)
        self.updatesearchemployeeinput_2.setFont(font)
        self.updatesearchemployeeinput_2.setStyleSheet("background-color:white;color:black;border:2px solid black")
        self.updatesearchemployeeinput_2.setObjectName("updatesearchemployeeinput_2")
        self.page_4 = QtWidgets.QWidget()
        self.page_4.setObjectName("page_4")
        self.frame_8 = QtWidgets.QFrame(self.page_4)
        self.frame_8.setGeometry(QtCore.QRect(0, 0, 771, 341))
        font = QtGui.QFont()
        font.setFamily("Yu Gothic UI Semibold")
        self.frame_8.setFont(font)
        self.frame_8.setStyleSheet("background-color:rgb(108, 108, 81)")
        self.frame_8.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.frame_8.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.frame_8.setObjectName("frame_8")
        self.groupBox_4 = QtWidgets.QGroupBox(self.frame_8)
        self.groupBox_4.setGeometry(QtCore.QRect(10, 10, 748, 321))
        font = QtGui.QFont()
        font.setFamily("Impact")
        self.groupBox_4.setFont(font)
        self.groupBox_4.setStyleSheet("color:white")
        self.groupBox_4.setObjectName("groupBox_4")
        self.deleteListWidget = QtWidgets.QListWidget(self.groupBox_4)
        self.deleteListWidget.setGeometry(QtCore.QRect(20, 30, 281, 271))
        self.deleteListWidget.setStyleSheet("background-color:white;color:black;border:2px solid black")
        self.deleteListWidget.setObjectName("deleteListWidget")
        self.btndeleteemp_2 = QtWidgets.QPushButton(self.groupBox_4)
        self.btndeleteemp_2.setGeometry(QtCore.QRect(310, 61, 101, 21))
        font = QtGui.QFont()
        font.setFamily("Impact")
        font.setBold(False)
        font.setWeight(50)
        self.btndeleteemp_2.setFont(font)
        self.btndeleteemp_2.setStyleSheet("background-color:rgb(255, 0, 0);color:white")
        self.btndeleteemp_2.setObjectName("btndeleteemp_2")
        self.btndeleteallemp = QtWidgets.QPushButton(self.groupBox_4)
        self.btndeleteallemp.setGeometry(QtCore.QRect(310, 90, 101, 21))
        font = QtGui.QFont()
        font.setFamily("Impact")
        font.setBold(False)
        font.setWeight(50)
        self.btndeleteallemp.setFont(font)
        self.btndeleteallemp.setStyleSheet("background-color:rgb(255, 0, 0);color:white")
        self.btndeleteallemp.setObjectName("btndeleteallemp")
        self.deletesearchemployeeinput = QtWidgets.QLineEdit(self.groupBox_4)
        self.deletesearchemployeeinput.setGeometry(QtCore.QRect(555, 20, 121, 21))
        font = QtGui.QFont()
        font.setPointSize(8)
        self.deletesearchemployeeinput.setFont(font)
        self.deletesearchemployeeinput.setStyleSheet("background-color:white;color:black;border:2px solid black")
        self.deletesearchemployeeinput.setObjectName("deletesearchemployeeinput")
        self.btnsearchempdelete = QtWidgets.QPushButton(self.groupBox_4)
        self.btnsearchempdelete.setGeometry(QtCore.QRect(680, 20, 61, 21))
        font = QtGui.QFont()
        font.setFamily("Impact")
        font.setBold(False)
        font.setWeight(50)
        self.btnsearchempdelete.setFont(font)
        self.btnsearchempdelete.setStyleSheet("background-color:rgb(255, 0, 0);color:white")
        self.btnsearchempdelete.setObjectName("btnsearchempdelete")
        self.stackedWidget.addWidget(self.page_4)
        self.page_5 = QtWidgets.QWidget()
        self.page_5.setObjectName("page_5")
        self.frame_9 = QtWidgets.QFrame(self.page_5)
        self.frame_9.setGeometry(QtCore.QRect(0, 0, 771, 341))
        font = QtGui.QFont()
        font.setFamily("Yu Gothic UI Semibold")
        self.frame_9.setFont(font)
        self.frame_9.setStyleSheet("background-color:rgb(108, 108, 81)")
        self.frame_9.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.frame_9.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.frame_9.setObjectName("frame_9")
        self.groupBox_5 = QtWidgets.QGroupBox(self.frame_9)
        self.groupBox_5.setGeometry(QtCore.QRect(10, 10, 748, 321))
        font = QtGui.QFont()
        font.setFamily("Impact")
        self.groupBox_5.setFont(font)
        self.groupBox_5.setStyleSheet("color:white")
        self.groupBox_5.setObjectName("groupBox_5")
        self.btnsearchempsalaryadd = QtWidgets.QPushButton(self.groupBox_5)
        self.btnsearchempsalaryadd.setGeometry(QtCore.QRect(675, 20, 61, 21))
        font = QtGui.QFont()
        font.setFamily("Impact")
        font.setBold(False)
        font.setWeight(50)
        self.btnsearchempsalaryadd.setFont(font)
        self.btnsearchempsalaryadd.setStyleSheet("background-color:rgb(255, 0, 0);color:white")
        self.btnsearchempsalaryadd.setObjectName("btnsearchempsalaryadd")
        self.addsalarysearchemployeeinput = QtWidgets.QLineEdit(self.groupBox_5)
        self.addsalarysearchemployeeinput.setGeometry(QtCore.QRect(550, 20, 121, 21))
        font = QtGui.QFont()
        font.setPointSize(8)
        self.addsalarysearchemployeeinput.setFont(font)
        self.addsalarysearchemployeeinput.setStyleSheet("background-color:white;color:black;border:2px solid black")
        self.addsalarysearchemployeeinput.setObjectName("addsalarysearchemployeeinput")
        self.addsalaryinput = QtWidgets.QLineEdit(self.groupBox_5)
        self.addsalaryinput.setGeometry(QtCore.QRect(290, 150, 181, 31))
        font = QtGui.QFont()
        font.setPointSize(8)
        self.addsalaryinput.setFont(font)
        self.addsalaryinput.setStyleSheet("background-color:white;color:black;border:2px solid black")
        self.addsalaryinput.setPlaceholderText(" Add salary")
        self.addsalaryinput.setObjectName("addsalaryinput")
        self.addsalaryname = QtWidgets.QLineEdit(self.groupBox_5)
        self.addsalaryname.setGeometry(QtCore.QRect(290, 110, 181, 31))
        font = QtGui.QFont()
        font.setPointSize(8)
        self.addsalaryname.setFont(font)
        self.addsalaryname.setStyleSheet("background-color:white;color:black;border:2px solid black")
        self.addsalaryname.setObjectName("addsalaryname")
        self.btnsavesalaryadd = QtWidgets.QPushButton(self.groupBox_5)
        self.btnsavesalaryadd.setGeometry(QtCore.QRect(400, 190, 71, 21))
        font = QtGui.QFont()
        font.setFamily("Impact")
        font.setBold(False)
        font.setWeight(50)
        self.btnsavesalaryadd.setFont(font)
        self.btnsavesalaryadd.setStyleSheet("background-color:rgb(255, 0, 0);color:white")
        self.btnsavesalaryadd.setObjectName("btnsavesalaryadd")
        self.btncancelsalaryadd = QtWidgets.QPushButton(self.groupBox_5)
        self.btncancelsalaryadd.setGeometry(QtCore.QRect(290, 190, 71, 21))
        font = QtGui.QFont()
        font.setFamily("Impact")
        font.setBold(False)
        font.setWeight(50)
        self.btncancelsalaryadd.setFont(font)
        self.btncancelsalaryadd.setStyleSheet("background-color:rgb(255, 0, 0);color:white")
        self.btncancelsalaryadd.setObjectName("btncancelsalaryadd")
        self.stackedWidget.addWidget(self.page_5)
        self.page_6 = QtWidgets.QWidget()
        self.page_6.setObjectName("page_6")
        self.frame_10 = QtWidgets.QFrame(self.page_6)
        self.frame_10.setGeometry(QtCore.QRect(0, 0, 771, 341))
        font = QtGui.QFont()
        font.setFamily("Yu Gothic UI Semibold")
        self.frame_10.setFont(font)
        self.frame_10.setStyleSheet("background-color:rgb(108, 108, 81)")
        self.frame_10.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.frame_10.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.frame_10.setObjectName("frame_10")
        self.frame_13 = QtWidgets.QFrame(self.frame_10)
        self.frame_13.setGeometry(QtCore.QRect(0, 0, 771, 341))
        font = QtGui.QFont()
        font.setFamily("Yu Gothic UI Semibold")
        self.frame_13.setFont(font)
        self.frame_13.setStyleSheet("background-color:rgb(108, 108, 81)")
        self.frame_13.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.frame_13.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.frame_13.setObjectName("frame_13")
        self.groupBox_6 = QtWidgets.QGroupBox(self.frame_13)
        self.groupBox_6.setGeometry(QtCore.QRect(10, 10, 748, 321))
        font = QtGui.QFont()
        font.setFamily("Impact")
        self.groupBox_6.setFont(font)
        self.groupBox_6.setStyleSheet("color:white")
        self.groupBox_6.setObjectName("groupBox_6")
        self.attentandaceTableWidget = QtWidgets.QTableWidget(self.groupBox_6)
        self.attentandaceTableWidget.setGeometry(QtCore.QRect(20, 30, 711, 251))
        self.attentandaceTableWidget.setStyleSheet("background-color:white;color:black;border:2px solid black")
        self.attentandaceTableWidget.setObjectName("attentandaceTableWidget")

        self.btnviewallattendance = QtWidgets.QPushButton(self.groupBox_6)
        self.btnviewallattendance.setGeometry(QtCore.QRect(15, 290, 61, 21))
        font = QtGui.QFont()
        font.setFamily("Impact")
        font.setBold(False)
        font.setWeight(50)
        self.btnviewallattendance.setFont(font)
        self.btnviewallattendance.setStyleSheet("background-color:rgb(255, 0, 0);color:white")
        self.btnviewallattendance.setObjectName("btnviewallattendance")
        self.viewsalarysearchemployeeinput = QtWidgets.QLineEdit(self.groupBox_6)
        self.viewsalarysearchemployeeinput.setGeometry(QtCore.QRect(545, 290, 121, 21))
        font = QtGui.QFont()
        font.setPointSize(8)
        self.viewsalarysearchemployeeinput.setFont(font)
        self.viewsalarysearchemployeeinput.setStyleSheet("background-color:white;color:black;border:2px solid black")
        self.viewsalarysearchemployeeinput.setObjectName("viewsalarysearchemployeeinput")
        self.btnsearchempviewsalary = QtWidgets.QPushButton(self.groupBox_6)
        self.btnsearchempviewsalary.setGeometry(QtCore.QRect(670, 290, 61, 21))
        font = QtGui.QFont()
        font.setFamily("Impact")
        font.setBold(False)
        font.setWeight(50)
        self.btnsearchempviewsalary.setFont(font)
        self.btnsearchempviewsalary.setStyleSheet("background-color:rgb(255, 0, 0);color:white")
        self.btnsearchempviewsalary.setObjectName("btnsearchempviewsalary")
        self.stackedWidget.addWidget(self.page_6)
        self.page_7 = QtWidgets.QWidget()
        self.page_7.setObjectName("page_7")
        self.frame_11 = QtWidgets.QFrame(self.page_7)
        self.frame_11.setGeometry(QtCore.QRect(0, 0, 771, 341))
        font = QtGui.QFont()
        font.setFamily("Yu Gothic UI Semibold")
        self.frame_11.setFont(font)
        self.frame_11.setStyleSheet("background-color:rgb(108, 108, 81)")
        self.frame_11.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.frame_11.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.frame_11.setObjectName("frame_11")
        self.groupBox_7 = QtWidgets.QGroupBox(self.frame_11)
        self.groupBox_7.setGeometry(QtCore.QRect(10, 10, 748, 321))
        font = QtGui.QFont()
        font.setFamily("Impact")
        self.groupBox_7.setFont(font)
        self.groupBox_7.setStyleSheet("color:white")
        self.groupBox_7.setObjectName("groupBox_7")
        self.btnsearchempupdate = QtWidgets.QPushButton(self.groupBox_7)
        self.btnsearchempupdate.setGeometry(QtCore.QRect(675, 20, 61, 21))
        font = QtGui.QFont()
        font.setFamily("Impact")
        font.setBold(False)
        font.setWeight(50)
        self.btnsearchempupdate.setFont(font)
        self.btnsearchempupdate.setStyleSheet("background-color:rgb(255, 0, 0);color:white")
        self.btnsearchempupdate.setObjectName("btnsearchempupdate")
        self.updatesearchemployeeinput = QtWidgets.QLineEdit(self.groupBox_7)
        self.updatesearchemployeeinput.setGeometry(QtCore.QRect(550, 20, 121, 21))
        font = QtGui.QFont()
        font.setPointSize(8)
        self.updatesearchemployeeinput.setFont(font)
        self.updatesearchemployeeinput.setStyleSheet("background-color:white;color:black;border:2px solid black")
        self.updatesearchemployeeinput.setObjectName("updatesearchemployeeinput")
        self.updatesalary = QtWidgets.QLineEdit(self.groupBox_7)
        self.updatesalary.setGeometry(QtCore.QRect(290, 150, 181, 31))
        font = QtGui.QFont()
        font.setPointSize(8)
        self.updatesalary.setFont(font)
        self.updatesalary.setStyleSheet("background-color:white;color:black;border:2px solid black")
        self.updatesalary.setPlaceholderText(" Employee Salary")
        self.updatesalary.setObjectName("updatesalary")
        self.updatesalaryname = QtWidgets.QLineEdit(self.groupBox_7)
        self.updatesalaryname.setGeometry(QtCore.QRect(290, 110, 181, 31))
        font = QtGui.QFont()
        font.setPointSize(8)
        self.updatesalaryname.setFont(font)
        self.updatesalaryname.setStyleSheet("background-color:white;color:black;border:2px solid black")
        self.updatesalaryname.setObjectName("updatesalaryname")
        self.btnsavesalaryupdate = QtWidgets.QPushButton(self.groupBox_7)
        self.btnsavesalaryupdate.setGeometry(QtCore.QRect(400, 190, 71, 21))
        font = QtGui.QFont()
        font.setFamily("Impact")
        font.setBold(False)
        font.setWeight(50)
        self.btnsavesalaryupdate.setFont(font)
        self.btnsavesalaryupdate.setStyleSheet("background-color:rgb(255, 0, 0);color:white")
        self.btnsavesalaryupdate.setObjectName("btnsavesalaryupdate")
        self.btncancelsalaryupdate = QtWidgets.QPushButton(self.groupBox_7)
        self.btncancelsalaryupdate.setGeometry(QtCore.QRect(290, 190, 71, 21))
        font = QtGui.QFont()
        font.setFamily("Impact")
        font.setBold(False)
        font.setWeight(50)
        self.btncancelsalaryupdate.setFont(font)
        self.btncancelsalaryupdate.setStyleSheet("background-color:rgb(255, 0, 0);color:white")
        self.btncancelsalaryupdate.setObjectName("btncancelsalaryupdate")
        self.stackedWidget.addWidget(self.page_7)
        self.page_8 = QtWidgets.QWidget()
        self.page_8.setObjectName("page_8")
        self.frame_14 = QtWidgets.QFrame(self.page_8)
        self.frame_14.setGeometry(QtCore.QRect(0, 0, 771, 341))
        font = QtGui.QFont()
        font.setFamily("Yu Gothic UI Semibold")
        self.frame_14.setFont(font)
        self.frame_14.setStyleSheet("background-color:rgb(108, 108, 81)")
        self.frame_14.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.frame_14.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.frame_14.setObjectName("frame_14")
        self.groupBox_8 = QtWidgets.QGroupBox(self.frame_14)
        self.groupBox_8.setGeometry(QtCore.QRect(10, 10, 748, 321))
        font = QtGui.QFont()
        font.setFamily("Impact")
        self.groupBox_8.setFont(font)
        self.groupBox_8.setStyleSheet("color:white")
        self.groupBox_8.setObjectName("groupBox_8")
        self.deleteattentandaceTableWidget = QtWidgets.QTableWidget(self.groupBox_8)
        self.deleteattentandaceTableWidget.setGeometry(QtCore.QRect(20, 30, 711, 251))
        self.deleteattentandaceTableWidget.setStyleSheet("background-color:white;color:black;border:2px solid black")
        self.deleteattentandaceTableWidget.setObjectName("deleteattentandaceTableWidget")
        self.btndeletesalary = QtWidgets.QPushButton(self.groupBox_8)
        self.btndeletesalary.setGeometry(QtCore.QRect(15, 290, 91, 21))
        font = QtGui.QFont()
        font.setFamily("Impact")
        font.setBold(False)
        font.setPointSize(8)
        font.setWeight(50)
        self.btndeletesalary.setFont(font)
        self.btndeletesalary.setStyleSheet("background-color:rgb(255, 0, 0);color:white")
        self.btndeletesalary.setObjectName("btndeletesalary")
        self.deletesalarysearchemployeeinput = QtWidgets.QLineEdit(self.groupBox_8)
        self.deletesalarysearchemployeeinput.setGeometry(QtCore.QRect(485, 290, 181, 21))
        font = QtGui.QFont()
        font.setPointSize(8)
        self.deletesalarysearchemployeeinput.setFont(font)
        self.deletesalarysearchemployeeinput.setStyleSheet("background-color:white;color:black;border:2px solid black")
        self.deletesalarysearchemployeeinput.setObjectName("deletesalarysearchemployeeinput")
        self.btnsearchempdeletesalary = QtWidgets.QPushButton(self.groupBox_8)
        self.btnsearchempdeletesalary.setGeometry(QtCore.QRect(670, 290, 61, 21))
        font = QtGui.QFont()
        font.setFamily("Impact")
        font.setBold(False)
        font.setWeight(50)
        self.btnsearchempdeletesalary.setFont(font)
        self.btnsearchempdeletesalary.setStyleSheet("background-color:rgb(255, 0, 0);color:white")
        self.btnsearchempdeletesalary.setObjectName("btnsearchempdeletesalary")
        self.btndeleteallattendance = QtWidgets.QPushButton(self.groupBox_8)
        self.btndeleteallattendance.setGeometry(QtCore.QRect(120, 290, 111, 21))
        font = QtGui.QFont()
        font.setFamily("Impact")
        font.setBold(False)
        font.setWeight(50)
        self.btndeleteallattendance.setFont(font)
        self.btndeleteallattendance.setStyleSheet("background-color:rgb(255, 0, 0);color:white")
        self.btndeleteallattendance.setObjectName("btndeleteallattendance")
        self.stackedWidget.addWidget(self.page_8)
        self.frame_2 = QtWidgets.QFrame(self.frame_3)
        self.frame_2.setGeometry(QtCore.QRect(2, 0, 791, 20))
        self.frame_2.setMinimumSize(QtCore.QSize(0, 20))
        self.frame_2.setStyleSheet("background-color:rgb(49, 49, 49)")
        self.frame_2.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.frame_2.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.frame_2.setObjectName("frame_2")
        self.btnexit = QtWidgets.QPushButton(self.frame_2)
        self.btnexit.setGeometry(QtCore.QRect(770, 0, 21, 17))
        font = QtGui.QFont()
        font.setFamily("Leelawadee")
        font.setBold(True)
        font.setWeight(75)
        self.btnexit.setFont(font)
        self.btnexit.setStyleSheet("background-color:rgbrgb(218, 218, 218);color:black")
        self.btnexit.setObjectName("btnexit")
        self.btnminimize = QtWidgets.QPushButton(self.frame_2)
        self.btnminimize.setGeometry(QtCore.QRect(750, 0, 21, 17))
        font = QtGui.QFont()
        font.setFamily("Leelawadee")
        font.setPointSize(13)
        font.setBold(True)
        font.setWeight(75)
        self.btnminimize.setFont(font)
        self.btnminimize.setStyleSheet("background-color:rgbrgb(218, 218, 218);color:black")
        self.btnminimize.setObjectName("btnminimize")
        self.pushButton = QtWidgets.QPushButton(self.frame_2)
        self.pushButton.setGeometry(QtCore.QRect(0, 0, 171, 16))
        font = QtGui.QFont()
        font.setFamily("Impact")
        font.setPointSize(7)
        self.pushButton.setFont(font)
        self.pushButton.setStyleSheet("background-color:rgb(49, 49, 49);color:white")
        self.pushButton.setIcon(icon)
        self.pushButton.setIconSize(QtCore.QSize(12, 12))
        self.pushButton.setFlat(True)
        self.pushButton.setObjectName("pushButton")
        self.btnminimize.raise_()
        self.btnexit.raise_()
        self.pushButton.raise_()
        self.frame = QtWidgets.QFrame(self.frame_3)
        self.frame.setGeometry(QtCore.QRect(10, 20, 771, 89))
        self.frame.setMinimumSize(QtCore.QSize(0, 89))
        self.frame.setStyleSheet("background-color:rgb(255, 195, 135)")
        self.frame.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.frame.setObjectName("frame")
        self.layoutWidget = QtWidgets.QWidget(self.frame)
        self.layoutWidget.setGeometry(QtCore.QRect(10, 10, 751, 69))
        self.layoutWidget.setObjectName("layoutWidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.layoutWidget)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.btnaddemp = QtWidgets.QPushButton(self.layoutWidget)
        font = QtGui.QFont()
        font.setFamily("Impact")
        font.setBold(False)
        font.setWeight(50)
        self.btnaddemp.setFont(font)
        self.btnaddemp.setStyleSheet("background-color:rgb(255, 0, 0);color:white")
        self.btnaddemp.setObjectName("btnaddemp")
        self.horizontalLayout.addWidget(self.btnaddemp)
        self.btnviewemp = QtWidgets.QPushButton(self.layoutWidget)
        font = QtGui.QFont()
        font.setFamily("Impact")
        font.setBold(False)
        font.setWeight(50)
        self.btnviewemp.setFont(font)
        self.btnviewemp.setStyleSheet("background-color:rgb(255, 0, 0);color:white")
        self.btnviewemp.setObjectName("btnviewemp")
        self.horizontalLayout.addWidget(self.btnviewemp)
        self.btnupdateemp = QtWidgets.QPushButton(self.layoutWidget)
        font = QtGui.QFont()
        font.setFamily("Impact")
        font.setBold(False)
        font.setWeight(50)
        self.btnupdateemp.setFont(font)
        self.btnupdateemp.setStyleSheet("background-color:rgb(255, 0, 0);color:white")
        self.btnupdateemp.setObjectName("btnupdateemp")
        self.horizontalLayout.addWidget(self.btnupdateemp)
        self.btndeleteemp = QtWidgets.QPushButton(self.layoutWidget)
        font = QtGui.QFont()
        font.setFamily("Impact")
        font.setBold(False)
        font.setWeight(50)
        self.btndeleteemp.setFont(font)
        self.btndeleteemp.setStyleSheet("background-color:rgb(255, 0, 0);color:white")
        self.btndeleteemp.setObjectName("btndeleteemp")
        self.horizontalLayout.addWidget(self.btndeleteemp)
        self.verticalLayout.addLayout(self.horizontalLayout)
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.btnaddempsalary = QtWidgets.QPushButton(self.layoutWidget)
        font = QtGui.QFont()
        font.setFamily("Impact")
        font.setPointSize(7)
        font.setBold(False)
        font.setWeight(50)
        self.btnaddempsalary.setFont(font)
        self.btnaddempsalary.setStyleSheet("background-color:rgb(255, 0, 0);color:white")
        self.btnaddempsalary.setObjectName("btnaddempsalary")
        self.horizontalLayout_2.addWidget(self.btnaddempsalary)
        self.btnviewempsalaryandattendance = QtWidgets.QPushButton(self.layoutWidget)
        font = QtGui.QFont()
        font.setFamily("Impact")
        font.setPointSize(7)
        font.setBold(False)
        font.setWeight(50)
        self.btnviewempsalaryandattendance.setFont(font)
        self.btnviewempsalaryandattendance.setStyleSheet("background-color:rgb(255, 0, 0);color:white")
        self.btnviewempsalaryandattendance.setObjectName("btnviewempsalaryandattendance")
        self.horizontalLayout_2.addWidget(self.btnviewempsalaryandattendance)
        self.btnupdateempsalary = QtWidgets.QPushButton(self.layoutWidget)
        font = QtGui.QFont()
        font.setFamily("Impact")
        font.setPointSize(7)
        font.setBold(False)
        font.setWeight(50)
        self.btnupdateempsalary.setFont(font)
        self.btnupdateempsalary.setStyleSheet("background-color:rgb(255, 0, 0);color:white")
        self.btnupdateempsalary.setObjectName("btnupdateempsalary")
        self.horizontalLayout_2.addWidget(self.btnupdateempsalary)
        self.btndeleteempsalaryandattendance = QtWidgets.QPushButton(self.layoutWidget)
        font = QtGui.QFont()
        font.setFamily("Impact")
        font.setPointSize(7)
        font.setBold(False)
        font.setWeight(50)
        self.btndeleteempsalaryandattendance.setFont(font)
        self.btndeleteempsalaryandattendance.setStyleSheet("background-color:rgb(255, 0, 0);color:white")
        self.btndeleteempsalaryandattendance.setObjectName("btndeleteempsalaryandattendance")
        self.horizontalLayout_2.addWidget(self.btndeleteempsalaryandattendance)
        self.verticalLayout.addLayout(self.horizontalLayout_2)
        MainWindow.setCentralWidget(self.centralwidget)

        MainWindow.setWindowFlags(QtCore.Qt.WindowType.FramelessWindowHint)
        MainWindow.setAttribute(QtCore.Qt.WidgetAttribute.WA_TranslucentBackground)
        self.btnexit.clicked.connect(lambda: MainWindow.close())
        self.btnminimize.clicked.connect(lambda: MainWindow.showMinimized())
        self.btnregister.clicked.connect(self.RegisterEmp)
        self.btnsearchempupdate_2.clicked.connect(self.UpdateEmpSearch)
        self.btnupdatecancelupdate.clicked.connect(self.ClearUpdateEmp)
        self.btnupdatesaveupdate.clicked.connect(self.UpdateEmp)
        self.btnviewall.clicked.connect(self.ViewAllEmp)
        self.btnsearchemp.clicked.connect(self.ViewEmp)
        self.btnsearchempdelete.clicked.connect(self.ViewDeleteEmp)
        self.btndeleteallemp.clicked.connect(self.WarningMessage1)
        self.btndeleteemp_2.clicked.connect(self.WarningMessage2)
        self.btnsearchempsalaryadd.clicked.connect(self.ViewAddEmpSalary)
        self.btnsavesalaryadd.clicked.connect(self.AddEmpSalary)
        self.btnviewallattendance.clicked.connect(self.ViewAllAttendance)
        self.btnsearchempupdate.clicked.connect(self.ViewUpdateEmpSalary)
        self.btnsavesalaryupdate.clicked.connect(self.UpdateEmpSalary)
        self.btncancelsalaryupdate.clicked.connect(self.ClearUpdateEmpSalary)
        self.btncancelsalaryadd.clicked.connect(self.ClearAddEmpSalary)
        self.btnsearchempviewsalary.clicked.connect(self.ViewAttendance)
        self.btndeleteallattendance.clicked.connect(self.WarningMessage3)
        self.btndeletesalary.clicked.connect(self.WarningMessage4)
        
        if len(self.deletesalarysearchemployeeinput.text()) == 0:
                self.btnsearchempdeletesalary.clicked.connect(self.ViewAllDeleteEmpAttendance)
        else:
               self.btnsearchempdeletesalary.clicked.connect(self.ViewDeleteEmpAttendance) 

        self.btnaddemp.clicked.connect(lambda:self.stackedWidget.setCurrentIndex(1))
        self.btnviewemp.clicked.connect(lambda:self.stackedWidget.setCurrentIndex(2))
        self.btnupdateemp.clicked.connect(lambda:self.stackedWidget.setCurrentIndex(3))
        self.btndeleteemp.clicked.connect(lambda:self.stackedWidget.setCurrentIndex(4))
        self.btnaddempsalary.clicked.connect(lambda:self.stackedWidget.setCurrentIndex(5))
        self.btnviewempsalaryandattendance.clicked.connect(lambda:self.stackedWidget.setCurrentIndex(6))
        self.btnupdateempsalary.clicked.connect(lambda:self.stackedWidget.setCurrentIndex(7))
        self.btndeleteempsalaryandattendance.clicked.connect(lambda:self.stackedWidget.setCurrentIndex(8))
        self.viewTableWidget.setFont(QtGui.QFont('Arial Bold',7))

        self.viewTableWidget.horizontalHeader().hide()
        self.viewTableWidget.verticalHeader().hide()

        self.attentandaceTableWidget.horizontalHeader().hide()
        self.attentandaceTableWidget.verticalHeader().hide()
        
        self.deleteattentandaceTableWidget.horizontalHeader().hide()
        self.deleteattentandaceTableWidget.verticalHeader().hide()

        self.retranslateUi(MainWindow)
        self.stackedWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def RegisterEmp(self):
            if len(self.empusername.text()) != 0 and len(self.emppassword.text()) != 0 and len(self.empconfirmpassword.text()) != 0 and len(self.empname.text()) != 0 and len(self.empcontact.text()) != 0 and len(self.empemail.text()) != 0 and len(self.empgender.currentText()) != 0 and len(self.empage.text()) != 0 and len(self.empaddress.toPlainText()) != 0:
                if self.emppassword.text() != self.empconfirmpassword.text():
                        from PyQt6.QtWidgets import QMessageBox
                        self.log = QMessageBox()
                        self.log.setWindowTitle('Employee Management System')
                        self.log.setWindowIcon(QtGui.QIcon('profile.png'))
                        self.log.setIcon(QMessageBox.Icon.Warning)
                        self.log.setText("Password & Confirm Password do not match.")
                        self.log.show()          
                else:
                        self.empusername.text()
                        self.emppassword.text()
                        self.empconfirmpassword.text()  

                        self.empname.text()
                        self.empcontact.text()
                        self.empemail.text()
                        self.empgender.currentText()
                        self.empage.text()
                        self.empaddress.toPlainText()

                        import mysql.connector  
                        db = mysql.connector.connect(
                        host = 'localhost',
                        user = 'root',
                        password = 'root',
                        database = 'emp_management_db'
                        )
                        cursor = db.cursor()
                        cursor.execute('insert into emp_info_tb values(%s,%s,%s,%s,%s,%s,%s,%s)',(self.empname.text(),self.empcontact.text(),self.empemail.text(),self.empgender.currentText(),int(self.empage.text()),self.empdateofbirth.text(),self.empaddress.toPlainText(),'0'))
                        db.commit()
                        cursor.execute('insert into emp_account values(%s,%s,%s)',(self.empname.text(),self.empusername.text(),self.empconfirmpassword.text()))
                        db.commit()
                        from PyQt6.QtWidgets import QMessageBox
                        self.log = QMessageBox()
                        self.log.setWindowTitle('Employee Management System')
                        self.log.setWindowIcon(QtGui.QIcon('profile.png'))
                        self.log.setIcon(QMessageBox.Icon.Information)
                        self.log.setText('Registration Complete.')
                        self.log.show()
                        self.empusername.clear()
                        self.emppassword.clear()
                        self.empconfirmpassword.clear()
                        self.empname.clear()
                        self.empcontact.clear()
                        self.empemail.clear()
                        self.updateempgender.setCurrentIndex(0)
                        self.empage.clear()
                        self.empaddress.clear()

    def UpdateEmpSearch(self):
            if len(self.updatesearchemployeeinput_2.text()) != 0:
                import mysql.connector
                db = mysql.connector.connect(
                host = 'localhost',
                user = 'root',
                password = 'root',
                database = 'emp_management_db'
                )
                cursor = db.cursor()
                cursor.execute(f'select * from emp_info_tb where EmpName = "{self.updatesearchemployeeinput_2.text()}"')
                checkUser = 0
                for empinfo in cursor.fetchall():
                        self.updateempname.setText(str(empinfo[0]))
                        self.updateempcontact.setText(str(empinfo[1]))
                        self.updateempemail.setText(str(empinfo[2]))
                        self.updateempgender.setCurrentText(str(empinfo[3]))
                        self.updateempage.setText(str(empinfo[4]))
                        self.updateempdateofbirth.setText(str(empinfo[5]))
                        self.updateempaddress.setPlainText(str(empinfo[6]))
                        checkUser += 1
                if checkUser > 0:
                        cursor.execute(f'select * from emp_account where EmpName = "{self.updatesearchemployeeinput_2.text()}"')
                        
                        for empinfo in cursor.fetchall():
                                self.updateempusername.setText(str(empinfo[1]))
                                self.updateemppassword.setText(str(empinfo[2]))
                                self.updateempconfirmpassword.setText(str(empinfo[2])) 
                else:
                        from PyQt6.QtWidgets import QMessageBox
                        self.log = QMessageBox()
                        self.log.setWindowTitle('Employee Management System')
                        self.log.setWindowIcon(QtGui.QIcon('profile.png'))
                        self.log.setIcon(QMessageBox.Icon.Warning)
                        self.log.setText('No employee found.')
                        self.log.show()

    def ClearUpdateEmp(self):
                self.updateempusername.clear()
                self.updateemppassword.clear()
                self.updateempconfirmpassword.clear()

                self.updateempname.clear()
                self.updateempcontact.clear()
                self.updateempemail.clear()
                self.updateempgender.setCurrentIndex(0)
                self.updateempage.clear()
                self.updateempaddress.clear()
                self.updateempdateofbirth.clear()
                self.updatesearchemployeeinput_2.clear()
        
    def UpdateEmp(self):
                if len(self.updateempname.text()) != 0 or len(self.updateempusername.text())  != 0 or len(self.updateempconfirmpassword.text()) != 0 or len(self.updateempname.text()) != 0 or len(self.updateempcontact.text()) != 0 or len(self.updateempemail.text()) != 0 and self.updateempgender.currentText() == 'Select Gender' or len(self.updateempage.text()) != 0 or len(self.updateempdateofbirth.text()) != 0 or len(self.updateempaddress.toPlainText()) != 0:
                        import mysql.connector
                        db = mysql.connector.connect(
                        host = 'localhost',
                        user = 'root',
                        password = 'root',
                        database = 'emp_management_db'
                        )
                        cursor = db.cursor()

                        cursor.execute(f'update  emp_info_tb set EmpName = "{self.updateempname.text()}",EmpContact = "{self.updateempcontact.text()}",EmpEmail = "{self.updateempemail.text()}",EmpGender = "{self.updateempgender.currentText()}",EmpAge = "{self.updateempage.text()}",EmpBirthdate = "{self.updateempdateofbirth.text()}",EmpAddress = "{self.updateempaddress.toPlainText()}"\
                                where EmpName = "{self.updatesearchemployeeinput_2.text()}"')
                        db.commit()

                        cursor.execute(f'update  emp_account set EmpName = "{self.updateempname.text()}", EmpUsername = "{self.updateempusername.text()}", EmpPassword = "{self.updateempconfirmpassword.text()}"\
                                where EmpName = "{self.updatesearchemployeeinput_2.text()}"')
                        db.commit()
                        self.ClearUpdateEmp()

                        from PyQt6.QtWidgets import QMessageBox
                        self.log = QMessageBox()
                        self.log.setWindowTitle('Employee Management System')
                        self.log.setWindowIcon(QtGui.QIcon('profile.png'))
                        self.log.setIcon(QMessageBox.Icon.Information)
                        self.log.setText('Update Complete.')
                        self.log.show()
    
    def ViewAllEmp(self):
                        self.searchemployeeinput.clear()
                        import mysql.connector
                        db = mysql.connector.connect(
                        host = 'localhost',
                        user = 'root',
                        password = 'root',
                        database = 'emp_management_db'
                        )
                        cursor = db.cursor()
                        cursor.execute('select * from emp_info_tb')
                        Employees = cursor.fetchall()


                        EmpInfoList = []
                        EmpRowNum = 1
                        EmployeeNum = 0
                        for emp in Employees:
                                EmpInfoList.append(emp)
                                EmployeeNum += 1

                        self.viewTableWidget.setRowCount(EmployeeNum+1)
                        self.viewTableWidget.setColumnCount(8)

                        IndexNumber = 0
                        self.viewTableWidget.setItem(0,0,QtWidgets.QTableWidgetItem('Employee Name'))
                        self.viewTableWidget.setItem(0,1,QtWidgets.QTableWidgetItem('Contact No.'))
                        self.viewTableWidget.setItem(0,2,QtWidgets.QTableWidgetItem('Email'))
                        self.viewTableWidget.setItem(0,3,QtWidgets.QTableWidgetItem('Gender'))
                        self.viewTableWidget.setItem(0,4,QtWidgets.QTableWidgetItem('Age'))
                        self.viewTableWidget.setItem(0,5,QtWidgets.QTableWidgetItem('Date of Birth'))
                        self.viewTableWidget.setItem(0,6,QtWidgets.QTableWidgetItem('Address'))
                        self.viewTableWidget.setItem(0,7,QtWidgets.QTableWidgetItem('Salary'))
                        self.viewTableWidget.setRowHeight(0,16)
                        self.viewTableWidget.setColumnWidth(2,120)
                        self.viewTableWidget.setColumnWidth(3,40)
                        self.viewTableWidget.setColumnWidth(4,25)
                        self.viewTableWidget.setColumnWidth(5,60)
                        self.viewTableWidget.setColumnWidth(6,190)
                        self.viewTableWidget.setColumnWidth(7,65)

                        for i in range(EmployeeNum):
                                self.viewTableWidget.setItem(EmpRowNum,0,QtWidgets.QTableWidgetItem(str(EmpInfoList[IndexNumber][0])))
                                self.viewTableWidget.setItem(EmpRowNum,1,QtWidgets.QTableWidgetItem(str(EmpInfoList[IndexNumber][1])))
                                self.viewTableWidget.setItem(EmpRowNum,2,QtWidgets.QTableWidgetItem(str(EmpInfoList[IndexNumber][2])))
                                self.viewTableWidget.setItem(EmpRowNum,3,QtWidgets.QTableWidgetItem(str(EmpInfoList[IndexNumber][3])))
                                self.viewTableWidget.setItem(EmpRowNum,4,QtWidgets.QTableWidgetItem(str(EmpInfoList[IndexNumber][4])))
                                self.viewTableWidget.setItem(EmpRowNum,5,QtWidgets.QTableWidgetItem(str(EmpInfoList[IndexNumber][5])))
                                self.viewTableWidget.setItem(EmpRowNum,6,QtWidgets.QTableWidgetItem(str(EmpInfoList[IndexNumber][6])))
                                self.viewTableWidget.setItem(EmpRowNum,7,QtWidgets.QTableWidgetItem(str(EmpInfoList[IndexNumber][7])))
                        
                                EmpRowNum+=1
                                IndexNumber+=1
                        if EmployeeNum == 0:
                                from PyQt6.QtWidgets import QMessageBox
                                self.log = QMessageBox()
                                self.log.setWindowTitle('Employee Management System')
                                self.log.setWindowIcon(QtGui.QIcon('profile.png'))
                                self.log.setIcon(QMessageBox.Icon.Information)
                                self.log.setText('No records of employee found.')
                                self.log.show() 

    def ViewEmp(self):
            self.viewTableWidget.clearContents()
            if len(self.searchemployeeinput.text()) != 0:
                        import mysql.connector
                        db = mysql.connector.connect(
                        host = 'localhost',
                        user = 'root',
                        password = 'root',
                        database = 'emp_management_db'
                        )
                        cursor = db.cursor()
                        cursor.execute(f'select * from emp_info_tb where EmpName = "{self.searchemployeeinput.text()}"')
                        Employees = cursor.fetchall()
                        EmpInfoList = []
                        EmpRowNum = 1
                        EmployeeNum = 0
                        for emp in Employees:
                                EmpInfoList.append(emp)
                                EmployeeNum += 1

                        self.viewTableWidget.setRowCount(EmployeeNum+1)
                        self.viewTableWidget.setColumnCount(7)

                        IndexNumber = 0
                        self.viewTableWidget.setItem(0,0,QtWidgets.QTableWidgetItem('Employee Name'))
                        self.viewTableWidget.setItem(0,1,QtWidgets.QTableWidgetItem('Contact No.'))
                        self.viewTableWidget.setItem(0,2,QtWidgets.QTableWidgetItem('Email'))
                        self.viewTableWidget.setItem(0,3,QtWidgets.QTableWidgetItem('Gender'))
                        self.viewTableWidget.setItem(0,4,QtWidgets.QTableWidgetItem('Age'))
                        self.viewTableWidget.setItem(0,5,QtWidgets.QTableWidgetItem('Date of Birth'))
                        self.viewTableWidget.setItem(0,6,QtWidgets.QTableWidgetItem('Address'))
                        self.viewTableWidget.setRowHeight(0,16)
                        self.viewTableWidget.setColumnWidth(2,120)
                        self.viewTableWidget.setColumnWidth(3,40)
                        self.viewTableWidget.setColumnWidth(4,25)
                        self.viewTableWidget.setColumnWidth(5,60)
                        self.viewTableWidget.setColumnWidth(6,255)

                        for i in range(EmployeeNum):
                                self.viewTableWidget.setItem(EmpRowNum,0,QtWidgets.QTableWidgetItem(str(EmpInfoList[IndexNumber][0])))
                                self.viewTableWidget.setItem(EmpRowNum,1,QtWidgets.QTableWidgetItem(str(EmpInfoList[IndexNumber][1])))
                                self.viewTableWidget.setItem(EmpRowNum,2,QtWidgets.QTableWidgetItem(str(EmpInfoList[IndexNumber][2])))
                                self.viewTableWidget.setItem(EmpRowNum,3,QtWidgets.QTableWidgetItem(str(EmpInfoList[IndexNumber][3])))
                                self.viewTableWidget.setItem(EmpRowNum,4,QtWidgets.QTableWidgetItem(str(EmpInfoList[IndexNumber][4])))
                                self.viewTableWidget.setItem(EmpRowNum,5,QtWidgets.QTableWidgetItem(str(EmpInfoList[IndexNumber][5])))
                                self.viewTableWidget.setItem(EmpRowNum,6,QtWidgets.QTableWidgetItem(str(EmpInfoList[IndexNumber][6])))
                        
                                EmpRowNum+=1
                                IndexNumber+=1
                        if EmployeeNum == 0:
                                from PyQt6.QtWidgets import QMessageBox
                                self.log = QMessageBox()
                                self.log.setWindowTitle('Employee Management System')
                                self.log.setWindowIcon(QtGui.QIcon('profile.png'))
                                self.log.setIcon(QMessageBox.Icon.Information)
                                self.log.setText('No record of employee found.')
                                self.log.show() 

    def ViewDeleteEmp(self):
                self.deleteListWidget.clear()
                if len(self.deletesearchemployeeinput.text()) != 0:
                        import mysql.connector
                        db = mysql.connector.connect(
                        host = 'localhost',
                        user = 'root',
                        password = 'root',
                        database = 'emp_management_db'
                        )
                        cursor = db.cursor()
                        cursor.execute(f'select * from emp_info_tb where EmpName = "{self.deletesearchemployeeinput.text()}"')
                        Employees1 = cursor.fetchall()
                        EmpNameList = []
                        EmpNum = 0
                        for emp in Employees1:
                                name = f'{emp[0]}'
                                
                                self.deleteListWidget.insertItem(EmpNum,name)
                                EmpNum += 1
                else:
                        self.deleteListWidget.clear()
                        import mysql.connector
                        db = mysql.connector.connect(
                        host = 'localhost',
                        user = 'root',
                        password = 'root',
                        database = 'emp_management_db'
                        )
                        cursor = db.cursor()
                        cursor.execute(f'select * from emp_info_tb')
                        Employees1 = cursor.fetchall()
                        EmpNameList = []
                        EmpNum = 0
                        for emp in Employees1:
                                name = f'{emp[0]}'
                                
                                self.deleteListWidget.insertItem(EmpNum,name)
                                EmpNum += 1
    
    def WarningMessage1(self):
        from PyQt6.QtWidgets import QMessageBox
        Warning = QMessageBox()
        Warning.setWindowTitle('Employee Management System')
        Warning.setIcon(QMessageBox.Icon.Warning)
        Warning.setWindowIcon(QtGui.QIcon('profile.png'))
        Warning.setWindowTitle('Delete Data')
        Warning.setText('Are you sure you want to delete all the employees?')
        Warning.setInformativeText('This action cannot be undone.')
        Warning.setStandardButtons(QMessageBox.StandardButton.Cancel|QMessageBox.StandardButton.Yes)
        Warning.buttonClicked.connect(self.DeleteAllEmp)
        Warning.exec()         

    def DeleteAllEmp(self,answer):
            if answer.text() == '&Yes':
                        import mysql.connector
                        db = mysql.connector.connect(
                        host = 'localhost',
                        user = 'root',
                        password = 'root',
                        database = 'emp_management_db'
                        )
                        cursor = db.cursor()
                        cursor.execute('delete from emp_info_tb')
                        db.commit()

                        cursor.execute('delete from emp_account')
                        db.commit()

                        cursor.execute('delete from emp_attendance')
                        db.commit()
                        self.ViewDeleteEmp()

    def WarningMessage2(self):
        if self.deleteListWidget.currentItem():
                from PyQt6.QtWidgets import QMessageBox
                Warning = QMessageBox()
                Warning.setWindowTitle('Employee Management System')
                Warning.setIcon(QMessageBox.Icon.Warning)
                Warning.setWindowIcon(QtGui.QIcon('profile.png'))
                Warning.setWindowTitle('Delete Data')
                Warning.setText('Are you sure you want to delete this employee?')
                Warning.setInformativeText('This action cannot be undone.')
                Warning.setStandardButtons(QMessageBox.StandardButton.Cancel|QMessageBox.StandardButton.Yes)
                Warning.buttonClicked.connect(self.DeleteEmp)
                Warning.exec()            

    def DeleteEmp(self,answer):
           try:
                if answer.text() == '&Yes':
                                import mysql.connector
                                db = mysql.connector.connect(
                                host = 'localhost',
                                user = 'root',
                                password = 'root',
                                database = 'emp_management_db'
                                )
                                cursor = db.cursor()
                                cursor.execute(f'delete from emp_info_tb where EmpName = "{self.deleteListWidget.currentItem().text()}"')
                                db.commit()
                                cursor.execute(f'delete from emp_account where EmpName = "{self.deleteListWidget.currentItem().text()}"')
                                db.commit()
                                cursor.execute(f'delete from emp_attendance where EmpName = "{self.deleteListWidget.currentItem().text()}"')
                                db.commit()
                                self.ViewDeleteEmp()
           except: pass

    def ViewAddEmpSalary(self):
            if len(self.addsalarysearchemployeeinput.text()) != 0:
                import mysql.connector
                db = mysql.connector.connect(
                host = 'localhost',
                user = 'root',
                password = 'root',
                database = 'emp_management_db'
                )
                cursor = db.cursor()
                cursor.execute(f'select * from emp_info_tb where EmpName = "{self.addsalarysearchemployeeinput.text()}"')
                Employee = cursor.fetchall()
                for emp in Employee:
                        self.addsalaryname.setText(emp[0])

    def AddEmpSalary(self):
            if len(self.addsalaryname.text()) != 0 and len(self.addsalaryinput.text()) != 0:
                import mysql.connector
                db = mysql.connector.connect(
                host = 'localhost',
                user = 'root',
                password = 'root',
                database = 'emp_management_db'
                )
                cursor = db.cursor()

                cursor.execute(f'select * from emp_info_tb where EmpName = "{self.addsalarysearchemployeeinput.text()}"')
                Employee = cursor.fetchall()
                for emp in Employee:
                        IntSalary = int(emp[7])
                        NewSalary = int(self.addsalaryinput.text()) + IntSalary

                self.addsalaryname.setText(self.addsalarysearchemployeeinput.text())
                cursor.execute(f'update emp_info_tb set EmpSalary = "{NewSalary}" where EmpName = "{self.addsalarysearchemployeeinput.text()}"')
                db.commit()

                from PyQt6.QtWidgets import QMessageBox
                updatecomplete = QMessageBox()
                updatecomplete.setWindowTitle('Employee Management System')
                updatecomplete.setIcon(QMessageBox.Icon.Information)
                updatecomplete.setWindowIcon(QtGui.QIcon('profile.png'))
                updatecomplete.setWindowTitle('Delete Data')
                updatecomplete.setText('Update Complete.')
                updatecomplete.exec()   

                self.ClearAddEmpSalary()

    def ViewAllAttendance(self):
                import mysql.connector
                db = mysql.connector.connect(
                host = 'localhost',
                user = 'root',
                password = 'root',
                database = 'emp_management_db'
                )
                cursor = db.cursor()
                cursor.execute('select * from emp_attendance')
                Employees = cursor.fetchall()

                EmpInfoList = []
                EmpRowNum = 1
                EmployeeNum = 0
                for emp in Employees:
                        EmpInfoList.append(emp)
                        EmployeeNum += 1

                self.attentandaceTableWidget.setRowCount(EmployeeNum+1)
                self.attentandaceTableWidget.setColumnCount(2)

                IndexNumber = 0
                self.attentandaceTableWidget.setItem(0,0,QtWidgets.QTableWidgetItem('Employee Name'))
                self.attentandaceTableWidget.setItem(0,1,QtWidgets.QTableWidgetItem('Logged In'))
                self.attentandaceTableWidget.setRowHeight(0,16)
                self.attentandaceTableWidget.setColumnWidth(0,200)
                self.attentandaceTableWidget.setColumnWidth(1,200)

                for i in range(EmployeeNum):
                        self.attentandaceTableWidget.setItem(EmpRowNum,0,QtWidgets.QTableWidgetItem(str(EmpInfoList[IndexNumber][0])))
                        self.attentandaceTableWidget.setItem(EmpRowNum,1,QtWidgets.QTableWidgetItem(str(EmpInfoList[IndexNumber][1])))
                
                        EmpRowNum+=1
                        IndexNumber+=1
                if EmployeeNum == 0:
                        from PyQt6.QtWidgets import QMessageBox
                        self.log = QMessageBox()
                        self.log.setWindowTitle('Employee Management System')
                        self.log.setWindowIcon(QtGui.QIcon('profile.png'))
                        self.log.setIcon(QMessageBox.Icon.Information)
                        self.log.setText('No records found.')
                        self.log.show() 

    def ViewAttendance(self):
            if len(self.viewsalarysearchemployeeinput.text()) != 0:
                import mysql.connector
                db = mysql.connector.connect(
                host = 'localhost',
                user = 'root',
                password = 'root',
                database = 'emp_management_db'
                )
                cursor = db.cursor()
                cursor.execute(f'select * from emp_attendance where EmpName = "{self.viewsalarysearchemployeeinput.text()}"')
                Employees = cursor.fetchall()

                EmpInfoList = []
                EmpRowNum = 1
                EmployeeNum = 0
                for emp in Employees:
                        EmpInfoList.append(emp)
                        EmployeeNum += 1

                self.attentandaceTableWidget.setRowCount(EmployeeNum+1)
                self.attentandaceTableWidget.setColumnCount(2)

                IndexNumber = 0
                self.attentandaceTableWidget.setItem(0,0,QtWidgets.QTableWidgetItem('Employee Name'))
                self.attentandaceTableWidget.setItem(0,1,QtWidgets.QTableWidgetItem('Logged In'))
                self.attentandaceTableWidget.setRowHeight(0,16)
                self.attentandaceTableWidget.setColumnWidth(0,200)
                self.attentandaceTableWidget.setColumnWidth(1,200)

                for i in range(EmployeeNum):
                        self.attentandaceTableWidget.setItem(EmpRowNum,0,QtWidgets.QTableWidgetItem(str(EmpInfoList[IndexNumber][0])))
                        self.attentandaceTableWidget.setItem(EmpRowNum,1,QtWidgets.QTableWidgetItem(str(EmpInfoList[IndexNumber][1])))
                
                        EmpRowNum+=1
                        IndexNumber+=1
                if EmployeeNum == 0:
                        from PyQt6.QtWidgets import QMessageBox
                        self.log = QMessageBox()
                        self.log.setWindowTitle('Employee Management System')
                        self.log.setWindowIcon(QtGui.QIcon('profile.png'))
                        self.log.setIcon(QMessageBox.Icon.Information)
                        self.log.setText('No records found.')
                        self.log.show() 

    def ViewUpdateEmpSalary(self):
            if len(self.updatesearchemployeeinput.text()) != 0:
                import mysql.connector
                db = mysql.connector.connect(
                host = 'localhost',
                user = 'root',
                password = 'root',
                database = 'emp_management_db'
                )
                cursor = db.cursor()
                cursor.execute(f'select * from emp_info_tb where EmpName = "{self.updatesearchemployeeinput.text()}"')
                Employee = cursor.fetchall()
                for emp in Employee:
                        self.updatesalaryname.setText(emp[0])
                        self.updatesalary.setText(emp[7])

    def UpdateEmpSalary(self):
            if len(self.updatesalaryname.text()) != 0 and len(self.updatesalary.text()) != 0:
                import mysql.connector
                db = mysql.connector.connect(
                host = 'localhost',
                user = 'root',
                password = 'root',
                database = 'emp_management_db'
                )
                cursor = db.cursor()
                self.updatesalaryname.setText(self.updatesearchemployeeinput.text())
                cursor.execute(f'update emp_info_tb set EmpSalary = "{self.updatesalary.text()}" where EmpName = "{self.updatesearchemployeeinput.text()}"')
                db.commit()

                from PyQt6.QtWidgets import QMessageBox
                updatecomplete = QMessageBox()
                updatecomplete.setWindowTitle('Employee Management System')
                updatecomplete.setIcon(QMessageBox.Icon.Information)
                updatecomplete.setWindowIcon(QtGui.QIcon('profile.png'))
                updatecomplete.setWindowTitle('Delete Data')
                updatecomplete.setText('Update Complete.')
                updatecomplete.exec()   

                self.addsalarysearchemployeeinput.clear()
                self.updatesalaryname.clear()
                self.updatesalary.clear()

                from PyQt6.QtWidgets import QMessageBox
                updatecomplete = QMessageBox()
                updatecomplete.setWindowTitle('Employee Management System')
                updatecomplete.setIcon(QMessageBox.Icon.Information)
                updatecomplete.setWindowIcon(QtGui.QIcon('profile.png'))
                updatecomplete.setWindowTitle('Delete Data')
                updatecomplete.setText('Update Complete.')
                updatecomplete.exec()   

                self.ClearUpdateEmpSalary()

    def ClearAddEmpSalary(self):
                self.addsalarysearchemployeeinput.clear()
                self.addsalaryname.clear()
                self.addsalaryinput.clear()

    def ClearUpdateEmpSalary(self):
                self.updatesearchemployeeinput.clear()
                self.updatesalaryname.clear()
                self.updatesalary.clear()

    def WarningMessage3(self):
        from PyQt6.QtWidgets import QMessageBox
        Warning = QMessageBox()
        Warning.setWindowTitle('Employee Management System')
        Warning.setIcon(QMessageBox.Icon.Warning)
        Warning.setWindowIcon(QtGui.QIcon('profile.png'))
        Warning.setWindowTitle('Delete Data')
        Warning.setText('Are you sure you want to delete all the attendance of the employees?')
        Warning.setInformativeText('This action cannot be undone.')
        Warning.setStandardButtons(QMessageBox.StandardButton.Cancel|QMessageBox.StandardButton.Yes)
        Warning.buttonClicked.connect(self.DeleteAllEmpAttendance)
        Warning.exec()       

    def ViewAllDeleteEmpAttendance(self):
                import mysql.connector
                db = mysql.connector.connect(
                host = 'localhost',
                user = 'root',
                password = 'root',
                database = 'emp_management_db'
                )
                cursor = db.cursor()
                cursor.execute(f'select * from emp_attendance')
                Employees = cursor.fetchall()

                EmpInfoList = []
                EmpRowNum = 1
                EmployeeNum = 0
                for emp in Employees:
                        EmpInfoList.append(emp)
                        EmployeeNum += 1

                self.deleteattentandaceTableWidget.setRowCount(EmployeeNum+1)
                self.deleteattentandaceTableWidget.setColumnCount(2)

                IndexNumber = 0
                self.deleteattentandaceTableWidget.setItem(0,0,QtWidgets.QTableWidgetItem('Employee Name'))
                self.deleteattentandaceTableWidget.setItem(0,1,QtWidgets.QTableWidgetItem('Logged In'))
                self.deleteattentandaceTableWidget.setRowHeight(0,16)
                self.deleteattentandaceTableWidget.setColumnWidth(0,200)
                self.deleteattentandaceTableWidget.setColumnWidth(1,200)

                for i in range(EmployeeNum):
                        self.deleteattentandaceTableWidget.setItem(EmpRowNum,0,QtWidgets.QTableWidgetItem(str(EmpInfoList[IndexNumber][0])))
                        self.deleteattentandaceTableWidget.setItem(EmpRowNum,1,QtWidgets.QTableWidgetItem(str(EmpInfoList[IndexNumber][1])))
                
                        EmpRowNum+=1
                        IndexNumber+=1
                if EmployeeNum == 0:
                        from PyQt6.QtWidgets import QMessageBox
                        self.log = QMessageBox()
                        self.log.setWindowTitle('Employee Management System')
                        self.log.setWindowIcon(QtGui.QIcon('profile.png'))
                        self.log.setIcon(QMessageBox.Icon.Information)
                        self.log.setText('No records found.')
                        self.log.show() 

    def ViewDeleteEmpAttendance(self):
            if len(self.deletesalarysearchemployeeinput.text()) != 0:
                import mysql.connector
                db = mysql.connector.connect(
                host = 'localhost',
                user = 'root',
                password = 'root',
                database = 'emp_management_db'
                )
                cursor = db.cursor()
                cursor.execute(f'select * from emp_attendance where EmpName = "{self.deletesalarysearchemployeeinput.text()}"')
                Employees = cursor.fetchall()

                EmpInfoList = []
                EmpRowNum = 1
                EmployeeNum = 0
                for emp in Employees:
                        EmpInfoList.append(emp)
                        EmployeeNum += 1

                self.deleteattentandaceTableWidget.setRowCount(EmployeeNum+1)
                self.deleteattentandaceTableWidget.setColumnCount(2)

                IndexNumber = 0
                self.deleteattentandaceTableWidget.setItem(0,0,QtWidgets.QTableWidgetItem('Employee Name'))
                self.deleteattentandaceTableWidget.setItem(0,1,QtWidgets.QTableWidgetItem('Logged In'))
                self.deleteattentandaceTableWidget.setRowHeight(0,16)
                self.deleteattentandaceTableWidget.setColumnWidth(0,200)
                self.deleteattentandaceTableWidget.setColumnWidth(1,200)

                for i in range(EmployeeNum):
                        self.deleteattentandaceTableWidget.setItem(EmpRowNum,0,QtWidgets.QTableWidgetItem(str(EmpInfoList[IndexNumber][0])))
                        self.deleteattentandaceTableWidget.setItem(EmpRowNum,1,QtWidgets.QTableWidgetItem(str(EmpInfoList[IndexNumber][1])))
                
                        EmpRowNum+=1
                        IndexNumber+=1
                if EmployeeNum == 0:
                        from PyQt6.QtWidgets import QMessageBox
                        self.log = QMessageBox()
                        self.log.setWindowTitle('Employee Management System')
                        self.log.setWindowIcon(QtGui.QIcon('profile.png'))
                        self.log.setIcon(QMessageBox.Icon.Information)
                        self.log.setText('No records found.')
                        self.log.show() 

    def DeleteAllEmpAttendance(self,answer):
            if answer.text() == '&Yes':
                        import mysql.connector
                        db = mysql.connector.connect(
                        host = 'localhost',
                        user = 'root',
                        password = 'root',
                        database = 'emp_management_db'
                        )
                        cursor = db.cursor()
                        cursor.execute('delete from emp_attendance')
                        db.commit()
                       

    def WarningMessage4(self):
        from PyQt6.QtWidgets import QMessageBox
        Warning = QMessageBox()
        Warning.setWindowTitle('Employee Management System')
        Warning.setIcon(QMessageBox.Icon.Warning)
        Warning.setWindowIcon(QtGui.QIcon('profile.png'))
        Warning.setWindowTitle('Delete Data')
        Warning.setText('Are you sure you want to delete the attendance of this employee?')
        Warning.setInformativeText('This action cannot be undone.')
        Warning.setStandardButtons(QMessageBox.StandardButton.Cancel|QMessageBox.StandardButton.Yes)
        Warning.buttonClicked.connect(self.DeleteEmpAttendance)
        Warning.exec()            

    def DeleteEmpAttendance(self,answer):
           try:
                if answer.text() == '&Yes':
                                import mysql.connector
                                db = mysql.connector.connect(
                                host = 'localhost',
                                user = 'root',
                                password = 'root',
                                database = 'emp_management_db'
                                )
                                cursor = db.cursor()
                                cursor.execute(f'delete from emp_attendance where EmpName = "{self.deletesalarysearchemployeeinput.text()}"')
                                db.commit()
                                self.ViewAllAttendance()
           except: pass



    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Employee Management System"))
        self.label.setText(_translate("MainWindow", "Employee Management System"))
        self.label_2.setText(_translate("MainWindow", "                     by Eligio Bautista III"))
        self.groupBox.setTitle(_translate("MainWindow", "ADD EMPLOYEE"))
        self.empusername.setPlaceholderText(_translate("MainWindow", " Employee Username"))
        self.empconfirmpassword.setPlaceholderText(_translate("MainWindow", " Employee Confirm Password"))
        self.empname.setPlaceholderText(_translate("MainWindow", " Employee Name"))
        self.empemail.setPlaceholderText(_translate("MainWindow", " Employee Email"))
        self.empgender.setItemText(0, _translate("MainWindow", " Select Gender"))
        self.empgender.setItemText(1, _translate("MainWindow", "Male"))
        self.empgender.setItemText(2, _translate("MainWindow", "Female"))
        self.label_3.setText(_translate("MainWindow", "Date of Birth"))
        self.empaddress.setPlaceholderText(_translate("MainWindow", " Address"))
        self.btnregister.setText(_translate("MainWindow", "Register"))
        self.btncancelregister.setText(_translate("MainWindow", "Cancel"))
        self.groupBox_2.setTitle(_translate("MainWindow", "VIEW EMPLOYEE"))
        self.btnviewall.setText(_translate("MainWindow", "View all"))
        self.searchemployeeinput.setPlaceholderText(_translate("MainWindow", " Search Employee"))
        self.btnsearchemp.setText(_translate("MainWindow", "Search"))
        self.groupBox_3.setTitle(_translate("MainWindow", "UPDATE EMPLOYEE"))
        self.updateempusername.setPlaceholderText(_translate("MainWindow", " Employee Username"))
        self.updateempconfirmpassword.setPlaceholderText(_translate("MainWindow", " Employee Confirm Password"))
        self.updateempname.setPlaceholderText(_translate("MainWindow", " Employee Name"))
        self.updateempemail.setPlaceholderText(_translate("MainWindow", " Employee Email"))
        self.updateempgender.setItemText(0, _translate("MainWindow", " Select Gender"))
        self.updateempgender.setItemText(1, _translate("MainWindow", "Male"))
        self.updateempgender.setItemText(2, _translate("MainWindow", "Female"))
        self.updateempaddress.setPlaceholderText(_translate("MainWindow", " Address"))
        self.btnupdatesaveupdate.setText(_translate("MainWindow", "Save"))
        self.btnupdatecancelupdate.setText(_translate("MainWindow", "Cancel"))
        self.groupBox_4.setTitle(_translate("MainWindow", "DELETE EMPLOYEE"))
        self.btndeleteemp_2.setText(_translate("MainWindow", "Delete Employee"))
        self.btndeleteallemp.setText(_translate("MainWindow", "Delete All"))
        self.deletesearchemployeeinput.setPlaceholderText(_translate("MainWindow", " Search Employee"))
        self.btnsearchempdelete.setText(_translate("MainWindow", "Search"))
        self.groupBox_5.setTitle(_translate("MainWindow", "ADD EMPLOYEE SALARY"))
        self.btnsearchempsalaryadd.setText(_translate("MainWindow", "Search"))
        self.addsalarysearchemployeeinput.setPlaceholderText(_translate("MainWindow", " Search Employee"))
        self.addsalaryname.setPlaceholderText(_translate("MainWindow", " Employee Name"))
        self.btnsavesalaryadd.setText(_translate("MainWindow", "Save"))
        self.btncancelsalaryadd.setText(_translate("MainWindow", "Cancel"))
        self.groupBox_6.setTitle(_translate("MainWindow", "VIEW EMPLOYEE SALARY AND ATTENDANCE"))
        self.btnviewallattendance.setText(_translate("MainWindow", "View all"))
        self.viewsalarysearchemployeeinput.setPlaceholderText(_translate("MainWindow", " Search Employee"))
        self.btnsearchempviewsalary.setText(_translate("MainWindow", "Search"))
        self.groupBox_7.setTitle(_translate("MainWindow", "UPDATE EMPLOYEE SALARY"))
        self.btnsearchempupdate.setText(_translate("MainWindow", "Search"))
        self.updatesearchemployeeinput.setPlaceholderText(_translate("MainWindow", " Search Employee"))
        self.updatesalaryname.setPlaceholderText(_translate("MainWindow", " Employee Name"))
        self.btnsavesalaryupdate.setText(_translate("MainWindow", "Save"))
        self.btncancelsalaryupdate.setText(_translate("MainWindow", "Cancel"))
        self.groupBox_8.setTitle(_translate("MainWindow", "DELETE EMPLOYEE ATTENDANCE"))
        self.btndeletesalary.setText(_translate("MainWindow", "Delete Attendance "))
        self.deletesalarysearchemployeeinput.setPlaceholderText(_translate("MainWindow", " Search Employee to Delete"))
        self.btnsearchempdeletesalary.setText(_translate("MainWindow", "Search"))
        self.btndeleteallattendance.setText(_translate("MainWindow", "Delete All"))
        self.btnexit.setText(_translate("MainWindow", "x"))
        self.btnminimize.setText(_translate("MainWindow", "-"))
        self.pushButton.setText(_translate("MainWindow", "Employee Management System"))
        self.btnaddemp.setText(_translate("MainWindow", "Add Emp"))
        self.btnviewemp.setText(_translate("MainWindow", "View Emp"))
        self.btnupdateemp.setText(_translate("MainWindow", "Update Emp"))
        self.btndeleteemp.setText(_translate("MainWindow", "Delete Emp"))
        self.btnaddempsalary.setText(_translate("MainWindow", "Add Emp salary"))
        self.btnviewempsalaryandattendance.setText(_translate("MainWindow", "VIEW EMPLOYEE ATTENDANCE"))
        self.btnupdateempsalary.setText(_translate("MainWindow", "Update Emp salary "))
        self.btndeleteempsalaryandattendance.setText(_translate("MainWindow", "Delete Emp attendance"))
        self.btnsearchempupdate_2.setText(_translate("MainWindow", "Search"))
        self.updatesearchemployeeinput_2.setPlaceholderText(_translate("MainWindow", " Search Employee to"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec())
